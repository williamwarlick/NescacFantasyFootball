Index: game.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import requests\nfrom bs4 import BeautifulSoup\n\nurl = \"https://nescac.com/boxscore.aspx?id=BLxxhvTBvnQI0eJFISAEu7ofiAnApjqHlzfcnOIMOH5WCy7zokfiX5xGGNlPZd4PyNEueWxWif7I3OuXVK8y6LfObP8Il9bJ51o%2bKosWUQXXx7uyaJ1LjSiz1mBS1Hn69VBuqTTne6oe0hhz%2fEXghA%3d%3d&path=football\"\n\npage = requests.get(url)\nsoup = BeautifulSoup(page.content, 'html.parser')\n\n\n\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/game.py b/game.py
--- a/game.py	
+++ b/game.py	
@@ -1,11 +1,80 @@
 import requests
 from bs4 import BeautifulSoup
+import pandas as pd
+
+# Send a GET request to the website and get its HTML content
+url = 'https://athletics.amherst.edu/sports/football/stats/2022/middlebury-college/boxscore/12292'
+response = requests.get(url)
+
+# Parse the HTML content using BeautifulSoup
+soup = BeautifulSoup(response.text, 'html.parser')
+
+# Find the section that contains the tables
+rushing = str(soup.find('section', {'id':'individual-rushing'}))
+passing = str(soup.find('section', {'id':'individual-passing'}))
+recieving = str(soup.find('section', {'id':'individual-receiving'}))
+defense_away = str(soup.find('section', {'id':'defense-away'}))
+defense_home = str(soup.find('section', {'id':'defense-home'}))
+
+def rushing_value(section):
+
+    tables = pd.read_html(str(section))
+
+    # Combine all tables into one
+    rushing_stats = pd.concat([table[(table['Player'] != 'Totals') & (table['Player'] != 'Team')] for table in tables], axis=0)
+
+    # Set the index to the Player column
+    rushing_stats.set_index('Player', inplace=True)
+    rushing_stats.clip(lower=0, inplace=True)
+    rushing_stats.fillna(0, inplace=True)
+
+    # Add a value column
+    rushing_stats['Value'] = rushing_stats['Gain'] / 10 + rushing_stats['TD'] * 6
+
+    return rushing_stats
+
+def passing_value(section):
+    tables = pd.read_html(str(section))
+    passing_stats = pd.concat([table[(table['Player'] != 'Totals') & (table['Player'] != 'Team')] for table in tables], axis=0)
+    passing_stats.fillna(0, inplace=True)
+    passing_stats.set_index('Player', inplace=True)
+    passing_stats['Value'] = passing_stats['Yds.'] / 25 + passing_stats['TD'] * 4 + passing_stats['Int.'] * -1
+    return passing_stats
+
+def receiving_value(section):
+    tables = pd.read_html(str(section))
+    receiving_stats = pd.concat([table[(table['Player'] != 'Totals') & (table['Player'] != 'Team')] for table in tables], axis=0)
+    receiving_stats.set_index('Player', inplace=True)
+    receiving_stats.clip(lower=0, inplace=True)
+    receiving_stats.fillna(0, inplace=True)
+    receiving_stats['Value'] = receiving_stats['Yds.'] / 10 + receiving_stats['TD'] * 6
+    return receiving_stats
+
+
+def defense_value(home, away):
+    defense_stats = pd.concat([
+        pd.read_html(str(home))[0],
+        pd.read_html(str(away))[0]
+    ], axis=0)
+    defense_stats.set_index('Player', inplace=True)
+    defense_stats = defense_stats.apply(pd.to_numeric, errors='coerce').fillna(0)
+
+    defense_stats['Value'] = defense_stats['TFL'] + defense_stats['INT.1'] * 3 + defense_stats['Solo'] + \
+                             defense_stats['Ast'] * .5 + defense_stats['Sacks'] * 2 + defense_stats['QH'] + defense_stats['BrUp']
+
+    return defense_stats
+
 
-url = "https://nescac.com/boxscore.aspx?id=BLxxhvTBvnQI0eJFISAEu7ofiAnApjqHlzfcnOIMOH5WCy7zokfiX5xGGNlPZd4PyNEueWxWif7I3OuXVK8y6LfObP8Il9bJ51o%2bKosWUQXXx7uyaJ1LjSiz1mBS1Hn69VBuqTTne6oe0hhz%2fEXghA%3d%3d&path=football"
 
-page = requests.get(url)
-soup = BeautifulSoup(page.content, 'html.parser')
 
 
 
 
+#print(receiving_value(recieving))
+#print(rushing_value(rushing))
+#print(passing_value(passing))
+
+print(defense_value(defense_home, defense_away))
+
+
+
